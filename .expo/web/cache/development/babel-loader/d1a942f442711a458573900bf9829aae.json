{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState } from 'react';\nimport { Text, View } from \"../components/Themed\";\nimport { Button, Flex, Pressable } from \"@react-native-material/core\";\nimport { TextInput } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        style: styles.logo,\n        source: require(\"./../assets/images/potato.png\")\n      }), _jsx(TextInput, {\n        label: \"Email\",\n        autoComplete: true\n      }), _jsx(Pressable, {\n        style: styles.forgotPasswordContainer,\n        children: _jsx(Text, {\n          style: styles.forgotPasswordLink,\n          children: \"Forgot password?\"\n        })\n      }), _jsx(Button, {\n        title: \"Log In\",\n        color: \"#0089E3\",\n        titleStyle: styles.loginButtonText,\n        pressableContainerStyle: styles.loginButton,\n        disabled: !password.length\n      }), _jsxs(Flex, {\n        style: styles.signUpContainer,\n        children: [_jsx(Text, {\n          children: \"Don't have an account?\"\n        }), _jsx(Pressable, {\n          children: _jsxs(Text, {\n            style: styles.signUpLink,\n            children: [' ', \"Sign up here.\"]\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 45\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    alignSelf: 'center'\n  },\n  input: {\n    marginTop: 20\n  },\n  signUpContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  signUpLink: {\n    color: '#0089E3'\n  },\n  loginButton: {\n    padding: 5\n  },\n  loginButtonText: {\n    color: 'white'\n  },\n  forgotPasswordContainer: {\n    alignSelf: 'flex-end',\n    marginTop: 5,\n    marginBottom: 20\n  },\n  forgotPasswordLink: {\n    color: '#0089E3',\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["/Users/brandonyuan/Desktop/hackathon/main/screens/Login.tsx"],"names":["useState","Text","View","Button","Flex","Pressable","TextInput","Login","password","setPassword","Keyboard","dismiss","styles","container","logo","require","forgotPasswordContainer","forgotPasswordLink","loginButtonText","loginButton","length","signUpContainer","signUpLink","StyleSheet","create","flex","justifyContent","padding","width","height","alignSelf","input","marginTop","flexDirection","color","marginBottom","fontWeight"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,IAAT,EAAeC,IAAf;AAGA,SAASC,MAAT,EAA0BC,IAA1B,EAAgCC,SAAhC,QAAiD,6BAAjD;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,kBAAgCP,QAAQ,CAAS,EAAT,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,SACE,KAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA,KAAnC;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,KAAD;AAAO,QAAA,KAAK,EAAED,MAAM,CAACE,IAArB;AAA2B,QAAA,MAAM,EAAEC,OAAO;AAA1C,QADF,EAEE,KAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,YAAY;AAArC,QAFF,EAKE,KAAC,SAAD;AAAW,QAAA,KAAK,EAAEH,MAAM,CAACI,uBAAzB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,kBAApB;AAAA;AAAA;AADF,QALF,EAQE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,KAAK,EAAC,SAA7B;AAAuC,QAAA,UAAU,EAAEL,MAAM,CAACM,eAA1D;AAA2E,QAAA,uBAAuB,EAAEN,MAAM,CAACO,WAA3G;AAAwH,QAAA,QAAQ,EAAE,CAACX,QAAQ,CAACY;AAA5I,QARF,EASE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,eAApB;AAAA,mBACE,KAAC,IAAD;AAAA;AAAA,UADF,EAEE,KAAC,SAAD;AAAA,oBACE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA,uBAAiC,GAAjC;AAAA;AADF,UAFF;AAAA,QATF;AAAA;AADF,IADF;AAoBD;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,OAAO,EAAE;AAJA,GADoB;AAO/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,SAAS,EAAE;AAHP,GAPyB;AAY/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN,GAZwB;AAe/BX,EAAAA,eAAe,EAAE;AACfY,IAAAA,aAAa,EAAE,KADA;AAEfP,IAAAA,cAAc,EAAE,QAFD;AAGfM,IAAAA,SAAS,EAAE;AAHI,GAfc;AAoB/BV,EAAAA,UAAU,EAAE;AACVY,IAAAA,KAAK,EAAE;AADG,GApBmB;AAuB/Bf,EAAAA,WAAW,EAAE;AACXQ,IAAAA,OAAO,EAAE;AADE,GAvBkB;AA0B/BT,EAAAA,eAAe,EAAE;AACfgB,IAAAA,KAAK,EAAE;AADQ,GA1Bc;AA6B/BlB,EAAAA,uBAAuB,EAAE;AACvBc,IAAAA,SAAS,EAAE,UADY;AAEvBE,IAAAA,SAAS,EAAE,CAFY;AAGvBG,IAAAA,YAAY,EAAE;AAHS,GA7BM;AAkC/BlB,EAAAA,kBAAkB,EAAE;AAClBiB,IAAAA,KAAK,EAAE,SADW;AAElBE,IAAAA,UAAU,EAAE;AAFM;AAlCW,CAAlB,CAAf","sourcesContent":["import { Keyboard, StyleSheet, TouchableWithoutFeedback, Image } from 'react-native';\nimport { useState } from 'react';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nimport { Button, Divider, Flex, Pressable } from \"@react-native-material/core\";\nimport { TextInput } from 'react-native-paper';\n\nexport default function Login() {\n  const [password, setPassword] = useState<string>('');\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      <View style={styles.container}>\n        <Image style={styles.logo} source={require('./../assets/images/potato.png')} />\n        <TextInput label=\"Email\" autoComplete/>\n        {/* <TextInput label='Email' style={styles.input} variant='standard' color='#0089E3' /> */}\n        {/* <TextInput label='Password' style={styles.input} variant='standard' color='#0089E3' onChangeText={(value) => setPassword(() => value)} /> */}\n        <Pressable style={styles.forgotPasswordContainer}>\n          <Text style={styles.forgotPasswordLink}>Forgot password?</Text>\n        </Pressable>\n        <Button title=\"Log In\" color=\"#0089E3\" titleStyle={styles.loginButtonText} pressableContainerStyle={styles.loginButton} disabled={!password.length}/>\n        <Flex style={styles.signUpContainer}>\n          <Text>Don't have an account?</Text>\n          <Pressable>\n            <Text style={styles.signUpLink}>{' '}Sign up here.</Text>\n          </Pressable>\n        </Flex>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n    justifyContent: 'center',\n    padding: 45\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    alignSelf: 'center'\n  },\n  input: {\n    marginTop: 20\n  },\n  signUpContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  signUpLink: {\n    color: '#0089E3'\n  },\n  loginButton: {\n    padding: 5\n  },\n  loginButtonText: {\n    color: 'white',\n  },\n  forgotPasswordContainer: {\n    alignSelf: 'flex-end',\n    marginTop: 5,\n    marginBottom: 20,\n  },\n  forgotPasswordLink: {\n    color: '#0089E3',\n    fontWeight: '700'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}